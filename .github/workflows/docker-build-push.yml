name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write
  pages: write
  id-token: write

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Debug repository info
      run: |
        echo "Repository name: ${{ github.event.repository.name }}"
        echo "Repository full name: ${{ github.repository }}"
        echo "Base href will be: /${{ github.event.repository.name }}/"
        
    - name: Build Angular application
      run: npm run build -- --configuration=production --base-href=/${{ github.event.repository.name }}/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Debug build output
      run: |
        echo "Checking build output directory:"
        ls -la dist/
        echo "Checking Angular build output:"
        ls -la dist/e-bidding-system/
        echo "Checking if index.html exists:"
        ls -la dist/e-bidding-system/index.html
        echo "Checking assets directory:"
        ls -la dist/e-bidding-system/assets/
        echo "Checking plugins directory:"
        ls -la dist/e-bidding-system/assets/plugins/
        echo "Checking jquery-validation directory:"
        ls -la dist/e-bidding-system/assets/plugins/jquery-validation/

    - name: Configure GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: Check GitHub Pages status
      run: |
        echo "GitHub Pages should be configured to serve from gh-pages branch"
        echo "Please ensure GitHub Pages is enabled in repository settings"
      
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: dist/e-bidding-system
        clean: true
        single-commit: true
